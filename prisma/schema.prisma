// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  CUSTOMER
  MOVER
  ADMIN
}

model User {
  id             String    @id @unique @default(uuid()) @db.Uuid
  sequenceNumber Int       @default(autoincrement())
  name           String
  email          String    @unique
  password       String
  role           Role      @default(CUSTOMER)
  avatar         String    @default("")
  disable        Boolean   @default(false)
  deleted        Boolean   @default(false)
  deletedBy      String?   @db.Uuid
  deletedAt      DateTime? @db.Timestamptz(3)
  hashedAt       String?
  hashedRt       String?
  createdAt      DateTime  @default(now()) @db.Timestamptz(3)
  updatedAt      DateTime  @updatedAt @db.Timestamptz(3)

  ForgetPassword ForgetPassword?
  Categories     Category[]

  @@map("user")
}

model Category {
  id               String     @id @unique @default(uuid()) @db.Uuid
  sequenceNumber   Int        @default(autoincrement())
  name             String     @unique
  image            String     @default("")
  home             Boolean    @default(false)
  commercial       Boolean    @default(false)
  userId           String     @db.Uuid
  parentCategoryId String?    @db.Uuid
  disable          Boolean    @default(false)
  deleted          Boolean    @default(false)
  deletedBy        String?    @db.Uuid
  deletedAt        DateTime?  @db.Timestamptz(3)
  createdAt        DateTime   @default(now()) @db.Timestamptz(3)
  updatedAt        DateTime   @updatedAt @db.Timestamptz(3)
  user             User       @relation(fields: [userId], references: [id])
  parentCategory   Category?  @relation("ParentCategory", fields: [parentCategoryId], references: [id])
  category         Category[] @relation("ParentCategory")

  @@map("category")
}

model EmailActivation {
  name          String
  email         String   @id @unique
  password      String
  activationOtp String
  expirationAt  DateTime
  createdAt     DateTime @default(now()) @db.Timestamptz(3)
  updatedAt     DateTime @updatedAt @db.Timestamptz(3)

  @@map("emailActivation")
}

model ForgetPassword {
  userEmail    String   @unique
  resetingOtp  String
  expirationAt DateTime
  createdAt    DateTime @default(now()) @db.Timestamptz(3)
  updatedAt    DateTime @updatedAt @db.Timestamptz(3)
  user         User     @relation(fields: [userEmail], references: [email])

  @@map("forgetPassword")
}

//  parentCategory Category? @relation("ParentCategory", fields: [parentCategoryId], references: [id])
//   predecessor    Category? @relation("ParentCategory")
